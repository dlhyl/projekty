/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.stu.fiit.gui.vylet_dashboard;

import sk.stu.fiit.gui.utils.CellRenderers.TrasaCellRenderer;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.logging.Level;
import javafx.util.Pair;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import sk.stu.fiit.app.CustomLogger;
import sk.stu.fiit.app.trip.MiestoZaujmu;
import sk.stu.fiit.app.trip.Trasa;
import sk.stu.fiit.app.trip.Vylet;
import sk.stu.fiit.gui.utils.CustomDialog;
import sk.stu.fiit.gui.utils.CustomScrollBarUI;
import sk.stu.fiit.gui.utils.MapPanel;
import sk.stu.fiit.gui.utils.RoundedPanel;

/**
 *
 * @author dlhyl
 */
public class VyletMapaPanel extends RoundedPanel {
    private final VyletDashboardPanel m;
    private final Vylet v;
    private boolean isListChanging = false;
    private Trasa novaTrasa;
    /**
     * Creates new form VyletMapaPanel
     */
    public VyletMapaPanel(VyletDashboardPanel m, Vylet v) {
        super(50, new Color(144,30,57,180));
        this.m = m; 
        this.v = v;
        this.novaTrasa = new Trasa(v.getTrasa().getNazov(), (ArrayList<MiestoZaujmu>)v.getTrasa().getMiestaZaujmu().clone(), (ArrayList<Double>)v.getTrasa().getVzdialenosti().clone());
        setOpaque(false);
        initComponents();
        checkControls();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblBack = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblKatalogTitle = new javax.swing.JLabel();
        btnChoose = new javax.swing.JButton();
        inputPOI = new javax.swing.JTextField();
        scrollPOIs = new javax.swing.JScrollPane();
        DefaultListModel dlm = new DefaultListModel<>();
        listPOIs = new javax.swing.JList<>(dlm);
        lblPOI = new javax.swing.JLabel();
        panelMap = new RoundedPanel(25, new Color(101, 21, 40));
        panelMapa = new MapPanel(v.getTrasa(), novaTrasa);
        pnlRoute = new RoundedPanel(25, new Color(0,0,0,100));
        scrollRoute = new javax.swing.JScrollPane();
        DefaultListModel dlmx = new DefaultListModel();
        for (Pair<MiestoZaujmu, Double> x : v.getTrasa().getMiestaVzdialenosti())
        dlmx.addElement(x);
        listRoute = new javax.swing.JList<>(dlmx);
        btnMoveUp = new javax.swing.JButton();
        btnMoveDown = new javax.swing.JButton();
        lblPOIs = new javax.swing.JLabel();
        pnlControls = new javax.swing.JPanel();
        btnResetMap = new javax.swing.JButton();
        btnRemovePOI = new javax.swing.JButton();
        btnSaveMap = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        lblBack.setBackground(new java.awt.Color(255, 255, 255));
        lblBack.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblBack.setForeground(new java.awt.Color(200, 200, 200));
        lblBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/stu/fiit/assets/icons/previous.png"))); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle"); // NOI18N
        lblBack.setText(bundle.getString("SPÄŤ")); // NOI18N
        lblBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblBackMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 25, 25);
        add(lblBack, gridBagConstraints);

        lblTitle.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 102, 102));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText(bundle.getString("MAPA")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        add(lblTitle, gridBagConstraints);

        lblKatalogTitle.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblKatalogTitle.setForeground(new java.awt.Color(255, 204, 204));
        lblKatalogTitle.setText(bundle.getString("KATALÓG TIPOV")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 5, 0);
        add(lblKatalogTitle, gridBagConstraints);

        btnChoose.setBackground(new java.awt.Color(144, 30, 57));
        btnChoose.setFont(new java.awt.Font("Gill Sans MT", 1, 16)); // NOI18N
        btnChoose.setForeground(new java.awt.Color(255, 204, 204));
        btnChoose.setText(bundle.getString("ZVOLIŤ")); // NOI18N
        btnChoose.setPreferredSize(new java.awt.Dimension(76, 40));
        btnChoose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnChooseMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.5;
        add(btnChoose, gridBagConstraints);

        inputPOI.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        inputPOI.setMaximumSize(new java.awt.Dimension(200, 40));
        inputPOI.setPreferredSize(new java.awt.Dimension(200, 40));
        inputPOI.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                if (isListChanging) return;
                m.getHlavneOkno().getPotulkor().getKatalogTipov().getZoznamMiestaTrasy((DefaultListModel)listPOIs.getModel(),inputPOI.getText());
                if (listPOIs.getModel().getSize() > 0)
                scrollPOIs.setVisible(true);
                updateUI();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                if (isListChanging) return;
                m.getHlavneOkno().getPotulkor().getKatalogTipov().getZoznamMiestaTrasy((DefaultListModel)listPOIs.getModel(),inputPOI.getText());
                if (listPOIs.getModel().getSize() > 0)
                scrollPOIs.setVisible(true);
                else {
                    scrollPOIs.setVisible(false);
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        add(inputPOI, gridBagConstraints);

        scrollPOIs.setVisible(false);
        scrollPOIs.setMaximumSize(new java.awt.Dimension(200, 150));
        scrollPOIs.setPreferredSize(new java.awt.Dimension(200, 150));

        listPOIs.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        listPOIs.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listPOIs.setVisibleRowCount(4);
        listPOIs.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()){
                    int index = listPOIs.getSelectedIndex();
                    if (index >= 0){
                        Object o = ((DefaultListModel)listPOIs.getModel()).getElementAt(index);
                        isListChanging = true;
                        inputPOI.setText(o instanceof MiestoZaujmu ? ((MiestoZaujmu)o).getName(): ((Trasa)o).getNazov());
                        inputPOI.requestFocusInWindow();
                        scrollPOIs.setVisible(false);
                        isListChanging = false;
                    }
                }
            }
        });
        scrollPOIs.setViewportView(listPOIs);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        add(scrollPOIs, gridBagConstraints);

        lblPOI.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblPOI.setForeground(new java.awt.Color(255, 102, 102));
        lblPOI.setText(bundle.getString("MIESTO ALEBO TRASA")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 5, 0);
        add(lblPOI, gridBagConstraints);

        panelMap.setOpaque(false);
        panelMap.setLayout(new java.awt.GridBagLayout());

        panelMapa.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(25, 25, 25, 15);
        panelMap.add(panelMapa, gridBagConstraints);

        pnlRoute.setOpaque(false);
        pnlRoute.setLayout(new java.awt.GridBagLayout());

        scrollRoute.setOpaque(false);
        scrollRoute.getViewport().setOpaque(false);
        scrollRoute.setViewportBorder(null);
        scrollRoute.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        scrollRoute.setMinimumSize(new java.awt.Dimension(100, 80));
        scrollRoute.setOpaque(false);
        scrollRoute.setPreferredSize(new java.awt.Dimension(100, 0));
        scrollRoute.getVerticalScrollBar().setPreferredSize(new Dimension(5, 0));
        scrollRoute.getVerticalScrollBar().setUI(new CustomScrollBarUI());

        listRoute.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listRoute.setOpaque(false);
        listRoute.setVisibleRowCount(4);
        listRoute.setCellRenderer(new TrasaCellRenderer());
        scrollRoute.setViewportView(listRoute);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 10, 10);
        pnlRoute.add(scrollRoute, gridBagConstraints);

        btnMoveUp.setBackground(new java.awt.Color(144, 30, 57));
        btnMoveUp.setForeground(new java.awt.Color(255, 204, 204));
        btnMoveUp.setText("▲");
        btnMoveUp.setBorder(null);
        btnMoveUp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMoveUp.setIconTextGap(0);
        btnMoveUp.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnMoveUp.setMaximumSize(new java.awt.Dimension(15, 15));
        btnMoveUp.setMinimumSize(new java.awt.Dimension(15, 15));
        btnMoveUp.setPreferredSize(new java.awt.Dimension(20, 20));
        btnMoveUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnMoveUpMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        pnlRoute.add(btnMoveUp, gridBagConstraints);

        btnMoveDown.setBackground(new java.awt.Color(144, 30, 57));
        btnMoveDown.setForeground(new java.awt.Color(255, 204, 204));
        btnMoveDown.setText("▼");
        btnMoveDown.setBorder(null);
        btnMoveDown.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMoveDown.setIconTextGap(0);
        btnMoveDown.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnMoveDown.setMaximumSize(new java.awt.Dimension(15, 15));
        btnMoveDown.setMinimumSize(new java.awt.Dimension(15, 15));
        btnMoveDown.setPreferredSize(new java.awt.Dimension(20, 20));
        btnMoveDown.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnMoveDownMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        pnlRoute.add(btnMoveDown, gridBagConstraints);

        lblPOIs.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        lblPOIs.setForeground(new java.awt.Color(255, 204, 204));
        lblPOIs.setText(bundle.getString("MIESTA ZÁUJMU")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 25, 0, 0);
        pnlRoute.add(lblPOIs, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.5;
        gridBagConstraints.weighty = 0.8;
        gridBagConstraints.insets = new java.awt.Insets(20, 5, 10, 20);
        panelMap.add(pnlRoute, gridBagConstraints);

        pnlControls.setMinimumSize(new java.awt.Dimension(0, 0));
        pnlControls.setOpaque(false);
        pnlControls.setPreferredSize(new java.awt.Dimension(0, 50));
        pnlControls.setLayout(new java.awt.GridBagLayout());

        btnResetMap.setBackground(new java.awt.Color(144, 30, 57));
        btnResetMap.setFont(new java.awt.Font("Gill Sans MT", 1, 15)); // NOI18N
        btnResetMap.setForeground(new java.awt.Color(255, 204, 204));
        btnResetMap.setText(bundle.getString("RESETOVAŤ MAPU")); // NOI18N
        btnResetMap.setPreferredSize(new java.awt.Dimension(145, 40));
        btnResetMap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnResetMapMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 10, 5);
        pnlControls.add(btnResetMap, gridBagConstraints);

        btnRemovePOI.setBackground(new java.awt.Color(144, 30, 57));
        btnRemovePOI.setFont(new java.awt.Font("Gill Sans MT", 1, 15)); // NOI18N
        btnRemovePOI.setForeground(new java.awt.Color(255, 204, 204));
        btnRemovePOI.setText(bundle.getString("ODSTRÁNIŤ BOD")); // NOI18N
        btnRemovePOI.setPreferredSize(new java.awt.Dimension(131, 40));
        btnRemovePOI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnRemovePOIMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 5, 5);
        pnlControls.add(btnRemovePOI, gridBagConstraints);

        btnSaveMap.setBackground(new java.awt.Color(144, 30, 57));
        btnSaveMap.setFont(new java.awt.Font("Gill Sans MT", 1, 15)); // NOI18N
        btnSaveMap.setForeground(new java.awt.Color(255, 204, 204));
        btnSaveMap.setText(bundle.getString("ULOŽIŤ MAPU")); // NOI18N
        btnSaveMap.setPreferredSize(new java.awt.Dimension(119, 40));
        btnSaveMap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnSaveMapMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 10, 5);
        pnlControls.add(btnSaveMap, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.5;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(20, 5, 10, 20);
        panelMap.add(pnlControls, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(25, 25, 25, 25);
        add(panelMap, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void lblBackMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseReleased
        this.m.changeScreen("cardVyletDash");          
    }//GEN-LAST:event_lblBackMouseReleased

    private void btnChooseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnChooseMouseReleased
        JLabel label = new JLabel();
        label.setFont(new Font("Gill Sans MT", Font.BOLD, 18));
        Object o = listPOIs.getSelectedValue();
        if (o == null) {
            label.setText(java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("error_zvolte_miesto_trasa"));
            JOptionPane.showMessageDialog(this.getParent(),label,java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("CHYBA"),JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        DefaultListModel model = (DefaultListModel)listRoute.getModel();
        if (o instanceof MiestoZaujmu) {
            MapPanel mp = (MapPanel)this.panelMapa;
            MiestoZaujmu mz = (MiestoZaujmu)o;
            mp.pridajMiesto(mz);
            model.addElement(novaTrasa.getMiestaVzdialenosti().get(novaTrasa.getMiestaVzdialenosti().size()-1));
        }
        else if (o instanceof Trasa) {
            MapPanel mp = (MapPanel)this.panelMapa;
            mp.pridajTrasu((Trasa)o);
            for (Pair<MiestoZaujmu, Double> x : novaTrasa.getMiestaVzdialenosti())
                if (!model.contains(x)) model.addElement(x);
        }
        
        inputPOI.setText("");
    }//GEN-LAST:event_btnChooseMouseReleased

    private void btnMoveUpMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMoveUpMouseReleased
//up
        int index = listRoute.getSelectedIndex();
        if (index < 0) {
            new CustomDialog(this.getParent(),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("error_zvolte_miesto"),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("CHYBA"), JOptionPane.WARNING_MESSAGE);
            CustomLogger.getLogger().log(Level.WARNING, "[VyletMapa] move up - nevybrate miesto; user:" + this.m.getHlavneOkno().getLoggedInPouzivatel().getLogin());
            return;
        }
        DefaultListModel model = (DefaultListModel)listRoute.getModel();
        if (index != 0) {
            this.novaTrasa.swapPOIs(index,index-1);
            model.clear();
            for (Pair<MiestoZaujmu, Double> x : novaTrasa.getMiestaVzdialenosti())
                model.addElement(x);
            ((MapPanel)panelMapa).resetMapa();
            ((MapPanel)panelMapa).zobrazTrasu(novaTrasa);
            listRoute.setSelectedIndex(index-1);
        }
    }//GEN-LAST:event_btnMoveUpMouseReleased

    private void btnMoveDownMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMoveDownMouseReleased
//        down
        int index = listRoute.getSelectedIndex();
        if (index < 0) {
            new CustomDialog(this.getParent(),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("error_zvolte_miesto"),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("CHYBA"), JOptionPane.WARNING_MESSAGE);
            CustomLogger.getLogger().log(Level.WARNING, "[VyletMapa] move down - nevybrate miesto; user:" + this.m.getHlavneOkno().getLoggedInPouzivatel().getLogin());
            return;
        }
        DefaultListModel model = (DefaultListModel)listRoute.getModel();
        if (index < model.size() - 1) {
            this.novaTrasa.swapPOIs(index,index+1);
            model.clear();
            for (Pair<MiestoZaujmu, Double> x : novaTrasa.getMiestaVzdialenosti())
                model.addElement(x);
            ((MapPanel)panelMapa).resetMapa();
            ((MapPanel)panelMapa).zobrazTrasu(novaTrasa);
            listRoute.setSelectedIndex(index+1);
        }
    }//GEN-LAST:event_btnMoveDownMouseReleased

    private void btnRemovePOIMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemovePOIMouseReleased
        int index = listRoute.getSelectedIndex();
        if (index < 0) {
            new CustomDialog(this.getParent(),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("error_zvolte_miesto"),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("CHYBA"), JOptionPane.WARNING_MESSAGE);
            CustomLogger.getLogger().log(Level.WARNING, "[VyletMapa] remove POI - nevybrate miesto; user:" + this.m.getHlavneOkno().getLoggedInPouzivatel().getLogin());
            return;
        }
        DefaultListModel model = (DefaultListModel)listRoute.getModel();
        this.novaTrasa.removePOI(((Pair<MiestoZaujmu,Double>)model.getElementAt(index)).getKey());
        model.clear();
        for (Pair<MiestoZaujmu, Double> x : novaTrasa.getMiestaVzdialenosti())
            model.addElement(x);
        ((MapPanel)panelMapa).resetMapa();
        ((MapPanel)panelMapa).zobrazTrasu(novaTrasa);
    }//GEN-LAST:event_btnRemovePOIMouseReleased

    private void btnResetMapMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMapMouseReleased
//        delet
        this.novaTrasa = new Trasa(v.getTrasa().getNazov(), (ArrayList<MiestoZaujmu>)v.getTrasa().getMiestaZaujmu().clone(), (ArrayList<Double>)v.getTrasa().getVzdialenosti().clone());
        ((MapPanel)panelMapa).resetMapa();
        ((MapPanel)panelMapa).setNovaTrasa(this.novaTrasa);
        ((MapPanel)panelMapa).zobrazDefaultTrasu();
        ((MapPanel)panelMapa).resetDisplay();
        DefaultListModel model = (DefaultListModel)listRoute.getModel();
        model.clear();
        for (Pair<MiestoZaujmu, Double> x : this.v.getTrasa().getMiestaVzdialenosti())
            model.addElement(x);
        
        CustomLogger.getLogger().log(Level.INFO, "[VyletMapa] resetovana mapa; user:" + this.m.getHlavneOkno().getLoggedInPouzivatel().getLogin());
    }//GEN-LAST:event_btnResetMapMouseReleased

    private void btnSaveMapMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMapMouseReleased
//        ukladanie
        MapPanel panelak = (MapPanel)panelMapa;
        this.v.setTrasa(novaTrasa);
        panelak.setDefaultTrasa(novaTrasa);
        panelak.resetMapa();
        panelak.zobrazDefaultTrasu();
        CustomLogger.getLogger().log(Level.INFO, "[VyletMapa] ulozena mapa; user:" + this.m.getHlavneOkno().getLoggedInPouzivatel().getLogin());
    }//GEN-LAST:event_btnSaveMapMouseReleased

    private void checkControls() {
        if (LocalDate.now().isAfter(v.getEndDate()) || v.isDokonceny()) {
            pnlControls.setVisible(false);
            lblKatalogTitle.setVisible(false);
            lblPOI.setVisible(false);
            btnChoose.setVisible(false);
            btnMoveUp.setVisible(false);
            btnMoveDown.setVisible(false);
            inputPOI.setVisible(false);
            scrollPOIs.setVisible(false);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChoose;
    private javax.swing.JButton btnMoveDown;
    private javax.swing.JButton btnMoveUp;
    private javax.swing.JButton btnRemovePOI;
    private javax.swing.JButton btnResetMap;
    private javax.swing.JButton btnSaveMap;
    private javax.swing.JTextField inputPOI;
    private javax.swing.JLabel lblBack;
    private javax.swing.JLabel lblKatalogTitle;
    private javax.swing.JLabel lblPOI;
    private javax.swing.JLabel lblPOIs;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JList<Object> listPOIs;
    private javax.swing.JList<Pair<MiestoZaujmu,Double>> listRoute;
    private javax.swing.JPanel panelMap;
    private javax.swing.JPanel panelMapa;
    private javax.swing.JPanel pnlControls;
    private javax.swing.JPanel pnlRoute;
    private javax.swing.JScrollPane scrollPOIs;
    private javax.swing.JScrollPane scrollRoute;
    // End of variables declaration//GEN-END:variables
}
