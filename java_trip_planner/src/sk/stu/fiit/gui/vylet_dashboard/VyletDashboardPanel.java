/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.stu.fiit.gui.vylet_dashboard;

import sk.stu.fiit.gui.utils.CellRenderers.ItinerarCellRenderer;
import sk.stu.fiit.gui.utils.CellRenderers.UcastniciCellRenderer;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import sk.stu.fiit.app.CustomLogger;
import sk.stu.fiit.app.trip.DostupnostVyletnika;
import sk.stu.fiit.app.trip.Itinerar.ItinerarItem;
import sk.stu.fiit.app.trip.KalendarDostupnosti.NajlepsiTermin;
import sk.stu.fiit.app.trip.TypVyletu;
import sk.stu.fiit.app.trip.Vylet;
import sk.stu.fiit.app.user.Vyletnik;
import sk.stu.fiit.gui.MainWindow;
import sk.stu.fiit.gui.utils.CustomDialog;
import sk.stu.fiit.gui.utils.CustomScrollBarUI;
import sk.stu.fiit.gui.utils.MapPanel;
import sk.stu.fiit.gui.utils.RoundedPanel;

/**
 *
 * @author dlhyl
 */
public class VyletDashboardPanel extends javax.swing.JPanel {
    private final MainWindow m;
    private final Vylet v;
    private final DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd. MM. yyyy");
    
    private VyletMapaPanel panelMapa;
    private VyletItinerarPanel panelItinerar;
    private VyletKalendarPanel panelKalendar;
    private VyletRozpocetPanel panelRozpocet;
    private VyletUcastniciPanel panelUcastnici;
    private VyletBiometriaPanel panelBiometria;

    /**
     * Creates new form VyletDashboardPanel
     */
    public VyletDashboardPanel(MainWindow m, Vylet v) {
        this.m = m;
        this.v = v;
        initComponents();
        checkControls();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlTitle = new RoundedPanel(20, new Color(101, 21, 40, 180));
        lblTitle = new javax.swing.JLabel();
        pnlContent = new javax.swing.JPanel();
        pnlDashboard = new RoundedPanel(50, new Color(144,30,57,180));
        pnlControls = new javax.swing.JPanel();
        btnLeave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnAddBiometry = new javax.swing.JButton();
        lblBack = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        pnlMap = new RoundedPanel(25, new Color(0,0,0,100));
        lblMapTitle = new javax.swing.JLabel();
        lblMapFullscreen = new javax.swing.JLabel();
        pnlMapContent = new MapPanel(v.getTrasa());
        pnlBudget = new RoundedPanel(25, new Color(0,0,0,100));
        lblBudgetTitle = new javax.swing.JLabel();
        lblBudgetFullscreen = new javax.swing.JLabel();
        lblBudgetPerMember = new javax.swing.JLabel();
        lblYourTasks = new javax.swing.JLabel();
        lblExpenses = new javax.swing.JLabel();
        lblTasks = new javax.swing.JLabel();
        lblAllTasks = new javax.swing.JLabel();
        lblAllBudget = new javax.swing.JLabel();
        pnlItinerary = new RoundedPanel(25, new Color(0,0,0,100));
        lblItineraryTitle = new javax.swing.JLabel();
        lblItineraryFullscreen = new javax.swing.JLabel();
        scrollItinerary = new javax.swing.JScrollPane();
        DefaultListModel dlm_i = new DefaultListModel();
        for (ItinerarItem p : v.getItinerar().getItinerar())
        dlm_i.addElement(p);
        listItinerary = new javax.swing.JList<>(dlm_i);
        pnlCalendar = new RoundedPanel(25, new Color(0,0,0,100));
        lblCalendarTitle = new javax.swing.JLabel();
        lblCalendarFullscreen = new javax.swing.JLabel();
        lblDates = new javax.swing.JLabel();
        lblBestDate = new javax.swing.JLabel();
        lblYourDate = new javax.swing.JLabel();
        lblDatesCntnt = new javax.swing.JLabel();
        lblBestDateCntnt = new javax.swing.JLabel();
        lblYourDateCntnt = new javax.swing.JLabel();
        pnlMembers = new RoundedPanel(25, new Color(0,0,0,100));
        lblMembersTitle = new javax.swing.JLabel();
        lblMembersFullscreen = new javax.swing.JLabel();
        scrollMembers = new javax.swing.JScrollPane();
        DefaultListModel dlm_vd = new DefaultListModel();
        for (Vyletnik vyletnik : v.getVeduci())
        dlm_vd.addElement(vyletnik);
        for (Vyletnik vyletnik : v.getPleby())
        dlm_vd.addElement(vyletnik);
        listMembers = new javax.swing.JList<>(dlm_vd);

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        pnlTitle.setMaximumSize(new java.awt.Dimension(0, 0));
        pnlTitle.setMinimumSize(new java.awt.Dimension(0, 0));
        pnlTitle.setOpaque(false);
        pnlTitle.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlTitle.setLayout(new java.awt.GridBagLayout());

        lblTitle.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 204, 204));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle"); // NOI18N
        lblTitle.setText(bundle.getString("VÝLET")); // NOI18N
        TypVyletu t = v.getTyp();
        lblTitle.setText(t.toString()+" výlet");
        lblTitle.setIcon(new ImageIcon(t.getIconURL()));
        lblTitle.setIconTextGap(5);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        pnlTitle.add(lblTitle, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 300;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(60, 60, -1, 60);
        add(pnlTitle, gridBagConstraints);

        pnlContent.setOpaque(false);
        pnlContent.setLayout(new java.awt.CardLayout());

        pnlDashboard.setOpaque(false);
        pnlDashboard.setLayout(new java.awt.GridBagLayout());

        pnlControls.setOpaque(false);
        pnlControls.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 15, 0));

        btnLeave.setBackground(new java.awt.Color(144, 30, 57));
        btnLeave.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        btnLeave.setForeground(new java.awt.Color(255, 204, 204));
        btnLeave.setText(bundle.getString("ODÍSŤ Z VÝLETU")); // NOI18N
        btnLeave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnLeaveMouseReleased(evt);
            }
        });
        pnlControls.add(btnLeave);

        btnCancel.setBackground(new java.awt.Color(144, 30, 57));
        btnCancel.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 204, 204));
        btnCancel.setText(bundle.getString("ZRUŠIŤ VÝLET")); // NOI18N
        btnCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnCancelMouseReleased(evt);
            }
        });
        pnlControls.add(btnCancel);

        btnAddBiometry.setBackground(new java.awt.Color(144, 30, 57));
        btnAddBiometry.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        btnAddBiometry.setForeground(new java.awt.Color(255, 204, 204));
        btnAddBiometry.setText(bundle.getString("PRIDAŤ BIOMETRIU")); // NOI18N
        btnAddBiometry.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnAddBiometryMouseReleased(evt);
            }
        });
        pnlControls.add(btnAddBiometry);

        lblBack.setBackground(new java.awt.Color(255, 255, 255));
        lblBack.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblBack.setForeground(new java.awt.Color(200, 200, 200));
        lblBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/stu/fiit/assets/icons/previous.png"))); // NOI18N
        lblBack.setText(bundle.getString("SPÄŤ")); // NOI18N
        lblBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblBackMouseReleased(evt);
            }
        });
        pnlControls.add(lblBack);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 30);
        pnlDashboard.add(pnlControls, gridBagConstraints);

        lblName.setText(v.getNazov());
        lblName.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblName.setForeground(new java.awt.Color(255, 102, 102));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        pnlDashboard.add(lblName, gridBagConstraints);

        lblDate.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 204, 204));
        lblDate.setText(v.getDatumString() + "(" + String.valueOf(v.getPocet_dni()) + " dni)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        pnlDashboard.add(lblDate, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipady = 20;
        pnlDashboard.add(filler1, gridBagConstraints);

        pnlMap.setOpaque(false);
        pnlMap.setLayout(new java.awt.GridBagLayout());

        lblMapTitle.setFont(new java.awt.Font("Gill Sans MT", 1, 20)); // NOI18N
        lblMapTitle.setForeground(new java.awt.Color(255, 102, 102));
        lblMapTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMapTitle.setText(bundle.getString("MAPA")); // NOI18N
        lblMapTitle.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        pnlMap.add(lblMapTitle, gridBagConstraints);

        lblMapFullscreen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/stu/fiit/assets/icons/full-screen.png"))); // NOI18N
        lblMapFullscreen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblMapFullscreenMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        pnlMap.add(lblMapFullscreen, gridBagConstraints);

        pnlMapContent.setMinimumSize(new java.awt.Dimension(0, 0));
        pnlMapContent.setPreferredSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 40;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 15, 15);
        pnlMap.add(pnlMapContent, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 35, 5, 10);
        pnlDashboard.add(pnlMap, gridBagConstraints);

        pnlBudget.setMinimumSize(new java.awt.Dimension(100, 80));
        pnlBudget.setOpaque(false);
        pnlBudget.setPreferredSize(new java.awt.Dimension(100, 80));
        pnlBudget.setLayout(new java.awt.GridBagLayout());

        lblBudgetTitle.setFont(new java.awt.Font("Gill Sans MT", 1, 20)); // NOI18N
        lblBudgetTitle.setForeground(new java.awt.Color(255, 102, 102));
        lblBudgetTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBudgetTitle.setText(bundle.getString("ROZPOČET A LOGISTIKA")); // NOI18N
        lblBudgetTitle.setMaximumSize(new java.awt.Dimension(150, 24));
        lblBudgetTitle.setMinimumSize(new java.awt.Dimension(150, 24));
        lblBudgetTitle.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        pnlBudget.add(lblBudgetTitle, gridBagConstraints);

        lblBudgetFullscreen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/stu/fiit/assets/icons/full-screen.png"))); // NOI18N
        lblBudgetFullscreen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblBudgetFullscreenMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        pnlBudget.add(lblBudgetFullscreen, gridBagConstraints);

        lblBudgetPerMember.setFont(new java.awt.Font("Gill Sans MT", 1, 36)); // NOI18N
        lblBudgetPerMember.setForeground(new java.awt.Color(229, 204, 255));
        lblBudgetPerMember.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBudgetPerMember.setText(v.getRozpocet().getSumaString(v.getPocetUcastnikov())+java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("€"));
        lblBudgetPerMember.setMaximumSize(null);
        lblBudgetPerMember.setMinimumSize(null);
        lblBudgetPerMember.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        pnlBudget.add(lblBudgetPerMember, gridBagConstraints);

        lblYourTasks.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblYourTasks.setForeground(new java.awt.Color(229, 204, 255));
        lblYourTasks.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblYourTasks.setText(String.valueOf(v.getRozpocet().getZoznamUloh((Vyletnik)this.m.getLoggedInPouzivatel()).size())+java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString(" (VAŠICH)"));
        lblYourTasks.setMaximumSize(null);
        lblYourTasks.setMinimumSize(null);
        lblYourTasks.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 15, 0);
        pnlBudget.add(lblYourTasks, gridBagConstraints);

        lblExpenses.setFont(new java.awt.Font("Gill Sans MT", 0, 24)); // NOI18N
        lblExpenses.setForeground(new java.awt.Color(255, 204, 204));
        lblExpenses.setText(bundle.getString("VÝDAVKY")); // NOI18N
        lblExpenses.setMaximumSize(null);
        lblExpenses.setMinimumSize(null);
        lblExpenses.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        pnlBudget.add(lblExpenses, gridBagConstraints);

        lblTasks.setFont(new java.awt.Font("Gill Sans MT", 0, 24)); // NOI18N
        lblTasks.setForeground(new java.awt.Color(255, 204, 204));
        lblTasks.setText(bundle.getString("ÚLOHY")); // NOI18N
        lblTasks.setMaximumSize(null);
        lblTasks.setMinimumSize(null);
        lblTasks.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        pnlBudget.add(lblTasks, gridBagConstraints);

        lblAllTasks.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblAllTasks.setForeground(new java.awt.Color(255, 204, 204));
        lblAllTasks.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAllTasks.setText(String.valueOf(v.getRozpocet().getZoznamUloh().size())+java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString(" (CELKOVO)"));
        lblAllTasks.setMaximumSize(null);
        lblAllTasks.setMinimumSize(null);
        lblAllTasks.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 15, 0);
        pnlBudget.add(lblAllTasks, gridBagConstraints);

        lblAllBudget.setFont(new java.awt.Font("Gill Sans MT", 1, 36)); // NOI18N
        lblAllBudget.setForeground(new java.awt.Color(255, 204, 204));
        lblAllBudget.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAllBudget.setText(v.getRozpocet().getSumaString()+java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("€"));
        lblAllBudget.setMaximumSize(null);
        lblAllBudget.setMinimumSize(null);
        lblAllBudget.setName(""); // NOI18N
        lblAllBudget.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        pnlBudget.add(lblAllBudget, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 35);
        pnlDashboard.add(pnlBudget, gridBagConstraints);

        pnlItinerary.setMinimumSize(new java.awt.Dimension(100, 80));
        pnlItinerary.setOpaque(false);
        pnlItinerary.setPreferredSize(new java.awt.Dimension(100, 80));
        pnlItinerary.setLayout(new java.awt.GridBagLayout());

        lblItineraryTitle.setFont(new java.awt.Font("Gill Sans MT", 1, 20)); // NOI18N
        lblItineraryTitle.setForeground(new java.awt.Color(255, 102, 102));
        lblItineraryTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblItineraryTitle.setText(bundle.getString("ITINERÁR")); // NOI18N
        lblItineraryTitle.setPreferredSize(new java.awt.Dimension(100, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        pnlItinerary.add(lblItineraryTitle, gridBagConstraints);

        lblItineraryFullscreen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/stu/fiit/assets/icons/full-screen.png"))); // NOI18N
        lblItineraryFullscreen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblItineraryFullscreenMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        pnlItinerary.add(lblItineraryFullscreen, gridBagConstraints);

        scrollItinerary.setOpaque(false);
        scrollItinerary.getViewport().setOpaque(false);
        scrollItinerary.setViewportBorder(null);
        scrollItinerary.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        scrollItinerary.setMinimumSize(new java.awt.Dimension(0, 0));
        scrollItinerary.setOpaque(false);
        scrollItinerary.getVerticalScrollBar().setPreferredSize(new Dimension(5, 0));
        scrollItinerary.getVerticalScrollBar().setUI(new CustomScrollBarUI());

        listItinerary.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listItinerary.setMaximumSize(null);
        listItinerary.setMinimumSize(null);
        listItinerary.setOpaque(false);
        listItinerary.setPreferredSize(null);
        listItinerary.setVisibleRowCount(4);
        listItinerary.setCellRenderer(new ItinerarCellRenderer());
        scrollItinerary.setViewportView(listItinerary);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 15, 15);
        pnlItinerary.add(scrollItinerary, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 80;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 35, 5, 10);
        pnlDashboard.add(pnlItinerary, gridBagConstraints);

        pnlCalendar.setMinimumSize(new java.awt.Dimension(100, 80));
        pnlCalendar.setOpaque(false);
        pnlCalendar.setPreferredSize(new java.awt.Dimension(100, 80));
        pnlCalendar.setLayout(new java.awt.GridBagLayout());

        lblCalendarTitle.setFont(new java.awt.Font("Gill Sans MT", 1, 20)); // NOI18N
        lblCalendarTitle.setForeground(new java.awt.Color(255, 102, 102));
        lblCalendarTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCalendarTitle.setText(bundle.getString("KALENDÁR DOSTUPNOSTI")); // NOI18N
        lblCalendarTitle.setPreferredSize(new java.awt.Dimension(100, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        pnlCalendar.add(lblCalendarTitle, gridBagConstraints);

        lblCalendarFullscreen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/stu/fiit/assets/icons/full-screen.png"))); // NOI18N
        lblCalendarFullscreen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblCalendarFullscreenMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        pnlCalendar.add(lblCalendarFullscreen, gridBagConstraints);

        lblDates.setFont(new java.awt.Font("Gill Sans MT", 0, 22)); // NOI18N
        lblDates.setForeground(new java.awt.Color(255, 204, 204));
        lblDates.setText(bundle.getString("ZAPÍSANÝCH TERMÍNOV")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        pnlCalendar.add(lblDates, gridBagConstraints);

        lblBestDate.setFont(new java.awt.Font("Gill Sans MT", 0, 22)); // NOI18N
        lblBestDate.setForeground(new java.awt.Color(255, 204, 204));
        lblBestDate.setText(bundle.getString("NAJVHODNEJŠÍ TERMÍN")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        pnlCalendar.add(lblBestDate, gridBagConstraints);

        lblYourDate.setFont(new java.awt.Font("Gill Sans MT", 0, 22)); // NOI18N
        lblYourDate.setForeground(new java.awt.Color(229, 204, 255));
        lblYourDate.setText(bundle.getString("VÁŠ TERMÍN")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 0);
        pnlCalendar.add(lblYourDate, gridBagConstraints);

        lblDatesCntnt.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblDatesCntnt.setForeground(new java.awt.Color(255, 204, 204));
        lblDatesCntnt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDatesCntnt.setText(String.valueOf(v.getDostupnost().getDostupnostiVyletnikov().size()));
        lblDatesCntnt.setMaximumSize(null);
        lblDatesCntnt.setMinimumSize(null);
        lblDatesCntnt.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 5, 0);
        pnlCalendar.add(lblDatesCntnt, gridBagConstraints);

        lblBestDateCntnt.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblBestDateCntnt.setForeground(new java.awt.Color(255, 204, 204));
        lblBestDateCntnt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NajlepsiTermin nt = v.getDostupnost().getNajTerminy().getNajlepsiTermin();
        LocalDate ndFrom = nt == null ? null : nt.getDatumOd();
        LocalDate ndTo = nt == null ? null : nt.getDatumDo();
        String nd = "Nedá sa vytvoriť";
        if (ndFrom != null && ndTo != null)
        nd = ndFrom.format(dtf) + " - " + ndTo.format(dtf);
        lblBestDateCntnt.setText(nd);
        lblBestDateCntnt.setMaximumSize(null);
        lblBestDateCntnt.setMinimumSize(null);
        lblBestDateCntnt.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 5, 0);
        pnlCalendar.add(lblBestDateCntnt, gridBagConstraints);

        lblYourDateCntnt.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblYourDateCntnt.setForeground(new java.awt.Color(229, 204, 255));
        lblYourDateCntnt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DostupnostVyletnika dostV = v.getDostupnost().getDostupnostVyletnika((Vyletnik)this.m.getLoggedInPouzivatel());
        String ndText = "Nevybrali ste termín";
        if (dostV != null)
        ndText = dostV.getDatumOd().format(dtf) + " - " + dostV.getDatumDo().format(dtf);
        lblYourDateCntnt.setText(ndText);
        lblYourDateCntnt.setMaximumSize(null);
        lblYourDateCntnt.setMinimumSize(null);
        lblYourDateCntnt.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 15, 0);
        pnlCalendar.add(lblYourDateCntnt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 80;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 10);
        pnlDashboard.add(pnlCalendar, gridBagConstraints);

        pnlMembers.setMinimumSize(new java.awt.Dimension(100, 80));
        pnlMembers.setOpaque(false);
        pnlMembers.setPreferredSize(new java.awt.Dimension(100, 80));
        pnlMembers.setLayout(new java.awt.GridBagLayout());

        lblMembersTitle.setFont(new java.awt.Font("Gill Sans MT", 1, 20)); // NOI18N
        lblMembersTitle.setForeground(new java.awt.Color(255, 102, 102));
        lblMembersTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMembersTitle.setText(bundle.getString("ÚČASTNÍCI")); // NOI18N
        lblMembersTitle.setPreferredSize(new java.awt.Dimension(100, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        pnlMembers.add(lblMembersTitle, gridBagConstraints);

        lblMembersFullscreen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/stu/fiit/assets/icons/full-screen.png"))); // NOI18N
        lblMembersFullscreen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblMembersFullscreenMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 20);
        pnlMembers.add(lblMembersFullscreen, gridBagConstraints);

        scrollMembers.setOpaque(false);
        scrollMembers.getViewport().setOpaque(false);
        scrollMembers.setViewportBorder(null);
        scrollMembers.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        scrollMembers.setMinimumSize(new java.awt.Dimension(100, 80));
        scrollMembers.setOpaque(false);
        scrollMembers.setPreferredSize(new java.awt.Dimension(100, 0));
        scrollMembers.getVerticalScrollBar().setPreferredSize(new Dimension(5, 0));
        scrollMembers.getVerticalScrollBar().setUI(new CustomScrollBarUI());

        listMembers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listMembers.setOpaque(false);
        listMembers.setVisibleRowCount(4);
        listMembers.setCellRenderer(new UcastniciCellRenderer(v));
        scrollMembers.setViewportView(listMembers);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 15, 15);
        pnlMembers.add(scrollMembers, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 80;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 35);
        pnlDashboard.add(pnlMembers, gridBagConstraints);

        pnlContent.add(pnlDashboard, "cardVyletDash");

        CardLayout c = (CardLayout)pnlContent.getLayout();
        c.show(pnlContent,"cardVyletDash");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 60, 60, 60);
        add(pnlContent, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void lblBackMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseReleased
        this.m.changeDashboardScreen("cardMojeVylety");
    }//GEN-LAST:event_lblBackMouseReleased

    private void lblMapFullscreenMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMapFullscreenMouseReleased
        this.changeScreen("cardMapa");
    }//GEN-LAST:event_lblMapFullscreenMouseReleased

    private void lblBudgetFullscreenMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBudgetFullscreenMouseReleased
        this.changeScreen("cardRozpocet");
    }//GEN-LAST:event_lblBudgetFullscreenMouseReleased

    private void lblMembersFullscreenMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMembersFullscreenMouseReleased
        this.changeScreen("cardUcastnici");
    }//GEN-LAST:event_lblMembersFullscreenMouseReleased

    private void lblCalendarFullscreenMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCalendarFullscreenMouseReleased
        this.changeScreen("cardKalendar");
    }//GEN-LAST:event_lblCalendarFullscreenMouseReleased

    private void lblItineraryFullscreenMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblItineraryFullscreenMouseReleased
        if (this.v.isDokonceny() || LocalDate.now().isAfter(this.v.getEndDate()))
            this.changeScreen("cardItinerar");
        else {
            new CustomDialog(this.getParent(),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("error_vylet_nema_termin"),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("CHYBA"),JOptionPane.WARNING_MESSAGE);
            CustomLogger.getLogger().log(Level.WARNING, "[VyletDashboard] nemozes otvorit itinerar, vylet nema termin; user:" + this.m.getLoggedInPouzivatel().getLogin());
        }
    }//GEN-LAST:event_lblItineraryFullscreenMouseReleased

    private void btnLeaveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLeaveMouseReleased
//     leavnut vylet
        Vyletnik vyletnik = (Vyletnik) m.getLoggedInPouzivatel();
        if (v.isZakladatel(vyletnik)) {
            new CustomDialog(this.getParent(),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("error_zakladatel_nemoze_odist"),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("CHYBA"),JOptionPane.WARNING_MESSAGE);
            CustomLogger.getLogger().log(Level.WARNING, "[VyletDashboard] zakladatel vyletu nemoze odist; user:" + this.m.getLoggedInPouzivatel().getLogin());
            return;
        }
        
        if(openOptionDialog(java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("ODCHOD Z VÝLETU"), java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("message_leave")) == 0) {
            vyletnik.odstranVylet(v); 
            this.m.changeDashboardScreen("cardMojeVylety");
            new CustomDialog(this.getParent(),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("message_leave_ok"),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("OK"),JOptionPane.INFORMATION_MESSAGE);
            CustomLogger.getLogger().log(Level.INFO, "[VyletDashboard] pouzivatel opustil vylet; user:" + this.m.getLoggedInPouzivatel().getLogin());
        }
    }//GEN-LAST:event_btnLeaveMouseReleased

    private void btnCancelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseReleased
//        zrusit vylet
        if(openOptionDialog(java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("ZRUŠENIE VÝLETU"), java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("message_zrusit")) == 0) {
            v.zrusVylet();
            this.m.changeDashboardScreen("cardMojeVylety");
            new CustomDialog(this.getParent(),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("message_zrusit_ok"),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("OK"),JOptionPane.INFORMATION_MESSAGE);
            CustomLogger.getLogger().log(Level.INFO, "[VyletDashboard] vylet bol zruseny; user:" + this.m.getLoggedInPouzivatel().getLogin());
        }
    }//GEN-LAST:event_btnCancelMouseReleased

    private void btnAddBiometryMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddBiometryMouseReleased
        this.changeScreen("cardBiometria");
    }//GEN-LAST:event_btnAddBiometryMouseReleased

    private int openOptionDialog(String title, String message) {
        JFrame frame = new JFrame();
        JLabel label = new JLabel();
        label.setFont(new Font("Gill Sans MT", Font.BOLD, 18));
        label.setText(message);
        String[] options = {java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("ÁNO"), java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("NIE")};
        return JOptionPane.showOptionDialog(frame.getContentPane(),label,title ,0,JOptionPane.YES_NO_OPTION,null,options,null);
    }
    
    public void changeScreen(String cardName) {
        switch (cardName) {
        case "cardMapa":
            if (panelMapa != null)
                pnlContent.remove(panelMapa);
            panelMapa = new VyletMapaPanel(this, v);
            pnlContent.add(panelMapa, cardName);
            break;
        case "cardBiometria":
            if (panelBiometria != null)
                pnlContent.remove(panelBiometria);
            panelBiometria = new VyletBiometriaPanel(this, v);
            pnlContent.add(panelBiometria, cardName);
            break;
        case "cardItinerar":
            if (panelItinerar != null)
                pnlContent.remove(panelItinerar);
            panelItinerar = new VyletItinerarPanel(this, v);
            pnlContent.add(panelItinerar, cardName);
            break;
        case "cardRozpocet":
            if (panelRozpocet != null)
                pnlContent.remove(panelRozpocet);
            panelRozpocet = new VyletRozpocetPanel(this, v);
            pnlContent.add(panelRozpocet, cardName);
            break;
        case "cardUcastnici":
            if (panelUcastnici != null)
                pnlContent.remove(panelUcastnici);
            panelUcastnici = new VyletUcastniciPanel(this, v);
            pnlContent.add(panelUcastnici, cardName);
            break;
        case "cardKalendar":
            if (panelKalendar != null)
                pnlContent.remove(panelKalendar);
            panelKalendar = new VyletKalendarPanel(this, v);
            pnlContent.add(panelKalendar, cardName);
            break;
        case "cardVyletDash":
            this.m.showVyletDashboard(v);
            break;
        }
        
        CardLayout c = (CardLayout) pnlContent.getLayout();
        c.show(pnlContent, cardName);
    }   
    
    public MainWindow getHlavneOkno() {
        return m;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddBiometry;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnLeave;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel lblAllBudget;
    private javax.swing.JLabel lblAllTasks;
    private javax.swing.JLabel lblBack;
    private javax.swing.JLabel lblBestDate;
    private javax.swing.JLabel lblBestDateCntnt;
    private javax.swing.JLabel lblBudgetFullscreen;
    private javax.swing.JLabel lblBudgetPerMember;
    private javax.swing.JLabel lblBudgetTitle;
    private javax.swing.JLabel lblCalendarFullscreen;
    private javax.swing.JLabel lblCalendarTitle;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDates;
    private javax.swing.JLabel lblDatesCntnt;
    private javax.swing.JLabel lblExpenses;
    private javax.swing.JLabel lblItineraryFullscreen;
    private javax.swing.JLabel lblItineraryTitle;
    private javax.swing.JLabel lblMapFullscreen;
    private javax.swing.JLabel lblMapTitle;
    private javax.swing.JLabel lblMembersFullscreen;
    private javax.swing.JLabel lblMembersTitle;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblTasks;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblYourDate;
    private javax.swing.JLabel lblYourDateCntnt;
    private javax.swing.JLabel lblYourTasks;
    private javax.swing.JList<ItinerarItem> listItinerary;
    private javax.swing.JList<Vyletnik> listMembers;
    private javax.swing.JPanel pnlBudget;
    private javax.swing.JPanel pnlCalendar;
    private javax.swing.JPanel pnlContent;
    private javax.swing.JPanel pnlControls;
    private javax.swing.JPanel pnlDashboard;
    private javax.swing.JPanel pnlItinerary;
    private javax.swing.JPanel pnlMap;
    private javax.swing.JPanel pnlMapContent;
    private javax.swing.JPanel pnlMembers;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JScrollPane scrollItinerary;
    private javax.swing.JScrollPane scrollMembers;
    // End of variables declaration//GEN-END:variables

    private void checkControls() {
        if (LocalDate.now().isAfter(v.getEndDate())) {
            btnLeave.setVisible(false);
            btnCancel.setVisible(false);
            btnAddBiometry.setVisible(true);
        } else if (v.isDokonceny()) {
            btnLeave.setVisible(false);
            btnCancel.setVisible(false);
            btnAddBiometry.setVisible(false);
        } else {
            btnLeave.setVisible(!v.isZakladatel((Vyletnik)m.getLoggedInPouzivatel()));
            btnCancel.setVisible(v.isZakladatel((Vyletnik)m.getLoggedInPouzivatel()));
            btnAddBiometry.setVisible(false);
        }
    }
}
