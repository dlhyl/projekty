/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.stu.fiit.gui.dashboard;

import java.awt.Color;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import sk.stu.fiit.app.CustomLogger;
import sk.stu.fiit.app.trip.MiestoZaujmu;
import sk.stu.fiit.app.trip.TypVyletu;
import sk.stu.fiit.app.trip.Vylet;
import sk.stu.fiit.app.user.Vyletnik;
import sk.stu.fiit.gui.utils.CalendarPanel;
import sk.stu.fiit.gui.MainWindow;
import sk.stu.fiit.gui.utils.CalendarPanel.CalendarUpdate;
import sk.stu.fiit.gui.utils.CustomDialog;
import sk.stu.fiit.gui.utils.RoundedPanel;

/**
 *
 * @author dlhyl
 */
public class NovyVyletPanel extends JPanel implements CalendarUpdate {

    private final MainWindow m;
    private LocalDate dtmOd = null;
    private LocalDate dtmDo = null;
    private boolean isListChanging = false;
    /**
     * Creates new form NovyVyletPanel
     */
    public NovyVyletPanel(MainWindow m) {
        this.m = m;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlTitle = new RoundedPanel(20, new Color(101, 21, 40, 180));
        lblTitle = new javax.swing.JLabel();
        pnlContent = new RoundedPanel(50, new Color(144,30,57,180));
        lblBack = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        inputPoint = new javax.swing.JTextField();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        scrollPoints = new javax.swing.JScrollPane();
        DefaultListModel dlm = new DefaultListModel<MiestoZaujmu>();
        listPoints = new javax.swing.JList<>(dlm);
        lblCategoryT = new javax.swing.JLabel();
        DefaultComboBoxModel cbm = new DefaultComboBoxModel(new TypVyletu[]{TypVyletu.TURISTICKY, TypVyletu.CYKLISTICKY, TypVyletu.VODACKY});
        cbCategory = new javax.swing.JComboBox<>(cbm);
        lblStart = new javax.swing.JLabel();
        pnlFrom = new CalendarPanel(this,38,24);
        pnlTo = new CalendarPanel(this,38,24);
        btnCreate = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        inputName = new javax.swing.JTextField();
        lblOd = new javax.swing.JLabel();
        lblDo = new javax.swing.JLabel();
        lblFrom = new javax.swing.JLabel();
        lblTo = new javax.swing.JLabel();

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        pnlTitle.setMaximumSize(new java.awt.Dimension(0, 0));
        pnlTitle.setMinimumSize(new java.awt.Dimension(0, 0));
        pnlTitle.setOpaque(false);
        pnlTitle.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlTitle.setLayout(new java.awt.GridBagLayout());

        lblTitle.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 204, 204));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle"); // NOI18N
        lblTitle.setText(bundle.getString("NOVÝ VÝLET")); // NOI18N
        lblTitle.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        pnlTitle.add(lblTitle, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 300;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(80, 100, -1, 100);
        add(pnlTitle, gridBagConstraints);

        pnlContent.setOpaque(false);
        pnlContent.setLayout(new java.awt.GridBagLayout());

        lblBack.setBackground(new java.awt.Color(255, 255, 255));
        lblBack.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblBack.setForeground(new java.awt.Color(200, 200, 200));
        lblBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/stu/fiit/assets/icons/previous.png"))); // NOI18N
        lblBack.setText(bundle.getString("SPÄŤ")); // NOI18N
        lblBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblBackMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 25);
        pnlContent.add(lblBack, gridBagConstraints);

        lblDate.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblDate.setForeground(new java.awt.Color(255, 102, 102));
        lblDate.setText(bundle.getString("PREFEROVANÝ DÁTUM")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        pnlContent.add(lblDate, gridBagConstraints);

        inputPoint.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        inputPoint.setMaximumSize(new java.awt.Dimension(200, 40));
        inputPoint.setPreferredSize(new java.awt.Dimension(200, 40));
        inputPoint.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                if (isListChanging) return;
                m.getPotulkor().getKatalogTipov().getZoznamMiestZaujmu((DefaultListModel)listPoints.getModel(),inputPoint.getText());
                if (listPoints.getModel().getSize() > 0)
                scrollPoints.setVisible(true);
                updateUI();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                if (isListChanging) return;
                m.getPotulkor().getKatalogTipov().getZoznamMiestZaujmu((DefaultListModel)listPoints.getModel(),inputPoint.getText());
                if (listPoints.getModel().getSize() > 0)
                scrollPoints.setVisible(true);
                else {
                    scrollPoints.setVisible(false);
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        pnlContent.add(inputPoint, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.weightx = 1.0;
        pnlContent.add(filler1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.weightx = 1.0;
        pnlContent.add(filler2, gridBagConstraints);

        scrollPoints.setVisible(false);
        scrollPoints.setMaximumSize(new java.awt.Dimension(200, 100));
        scrollPoints.setPreferredSize(new java.awt.Dimension(200, 100));

        listPoints.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        listPoints.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listPoints.setVisibleRowCount(4);
        listPoints.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()){

                    int index = listPoints.getSelectedIndex();
                    if (index >= 0){
                        isListChanging = true;
                        MiestoZaujmu m = (MiestoZaujmu) ((DefaultListModel)listPoints.getModel()).getElementAt(index);
                        inputPoint.setText(m.getName());
                        inputPoint.requestFocusInWindow();
                        scrollPoints.setVisible(false);
                        isListChanging = false;
                    }
                }
            }
        });
        scrollPoints.setViewportView(listPoints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        pnlContent.add(scrollPoints, gridBagConstraints);

        lblCategoryT.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblCategoryT.setForeground(new java.awt.Color(255, 102, 102));
        lblCategoryT.setText(bundle.getString("KATEGÓRIA")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        pnlContent.add(lblCategoryT, gridBagConstraints);

        cbCategory.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        cbCategory.setPreferredSize(new java.awt.Dimension(37, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        pnlContent.add(cbCategory, gridBagConstraints);

        lblStart.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblStart.setForeground(new java.awt.Color(255, 102, 102));
        lblStart.setText(bundle.getString("ZAČIATOK TRASY")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        pnlContent.add(lblStart, gridBagConstraints);

        pnlFrom.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        pnlContent.add(pnlFrom, gridBagConstraints);

        pnlTo.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        pnlContent.add(pnlTo, gridBagConstraints);

        btnCreate.setBackground(new java.awt.Color(144, 30, 57));
        btnCreate.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(255, 204, 204));
        btnCreate.setText(bundle.getString("VYTVORIŤ")); // NOI18N
        btnCreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnCreateMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 50, 0);
        pnlContent.add(btnCreate, gridBagConstraints);

        lblName.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblName.setForeground(new java.awt.Color(255, 102, 102));
        lblName.setText(bundle.getString("NÁZOV")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        pnlContent.add(lblName, gridBagConstraints);

        inputName.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        inputName.setMaximumSize(new java.awt.Dimension(200, 40));
        inputName.setPreferredSize(new java.awt.Dimension(200, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 30);
        pnlContent.add(inputName, gridBagConstraints);

        lblOd.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        lblOd.setForeground(new java.awt.Color(255, 204, 204));
        lblOd.setText(bundle.getString("OD")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 0);
        pnlContent.add(lblOd, gridBagConstraints);

        lblDo.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        lblDo.setForeground(new java.awt.Color(255, 204, 204));
        lblDo.setText(bundle.getString("DO")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 30);
        pnlContent.add(lblDo, gridBagConstraints);

        lblFrom.setFont(new java.awt.Font("Gill Sans MT", 1, 20)); // NOI18N
        lblFrom.setForeground(new java.awt.Color(255, 204, 204));
        lblFrom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFrom.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblFrom.setPreferredSize(new java.awt.Dimension(0, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 0, 0);
        pnlContent.add(lblFrom, gridBagConstraints);

        lblTo.setFont(new java.awt.Font("Gill Sans MT", 1, 20)); // NOI18N
        lblTo.setForeground(new java.awt.Color(255, 204, 204));
        lblTo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTo.setPreferredSize(new java.awt.Dimension(0, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 30);
        pnlContent.add(lblTo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 100, 100);
        add(pnlContent, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void lblBackMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseReleased
        this.m.changeDashboardScreen("cardDashboardMenu");
    }//GEN-LAST:event_lblBackMouseReleased

    private void btnCreateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateMouseReleased
        String name = inputName.getText();
        TypVyletu t = (TypVyletu)cbCategory.getSelectedItem();
        MiestoZaujmu m = listPoints.getSelectedValue();
        if (m == null) {
            new CustomDialog(this.getParent(),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("error_vyberte_miesto"), java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("CHYBA"), JOptionPane.WARNING_MESSAGE);
            CustomLogger.getLogger().log(Level.WARNING, "[NovyVylet] nevybrate miesto; user:" + this.m.getLoggedInPouzivatel().getLogin());
            return;
        }
        
        if (name.isEmpty()) {
            new CustomDialog(this.getParent(),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("error_vyplnte_nazov_vyletu"), java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("CHYBA"), JOptionPane.WARNING_MESSAGE);
            CustomLogger.getLogger().log(Level.WARNING, "[NovyVylet] nevybrate meno; user:" + this.m.getLoggedInPouzivatel().getLogin());
            return;
        }
        
        if (dtmOd == null || dtmDo == null) {
            new CustomDialog(this.getParent(),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("error_zvolte_preferovany_datum"), java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("CHYBA"), JOptionPane.WARNING_MESSAGE);
            CustomLogger.getLogger().log(Level.WARNING, "[NovyVylet] nevybraty datum; user:" + this.m.getLoggedInPouzivatel().getLogin());
            return;
        }
        
        Vylet v = new Vylet(name, t, dtmOd, dtmDo, m, (Vyletnik)this.m.getLoggedInPouzivatel());
        CustomLogger.getLogger().log(Level.INFO, "[Novy vylet] "+this.m.getLoggedInPouzivatel().getLogin());
        this.m.getPotulkor().pridajVylet(v);
        this.m.showVyletDashboard(v);
    }//GEN-LAST:event_btnCreateMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JComboBox<TypVyletu> cbCategory;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JTextField inputName;
    private javax.swing.JTextField inputPoint;
    private javax.swing.JLabel lblBack;
    private javax.swing.JLabel lblCategoryT;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDo;
    private javax.swing.JLabel lblFrom;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblOd;
    private javax.swing.JLabel lblStart;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTo;
    private javax.swing.JList<MiestoZaujmu> listPoints;
    private javax.swing.JPanel pnlContent;
    private javax.swing.JPanel pnlFrom;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JPanel pnlTo;
    private javax.swing.JScrollPane scrollPoints;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateCalendar(LocalDate value, CalendarPanel cp) {
        if (value == null) {
            new CustomDialog(this.getParent(),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("error_zvolte_datum"),java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("CHYBA"),JOptionPane.WARNING_MESSAGE);
            CustomLogger.getLogger().log(Level.WARNING, "[NovyVylet] nezvoleny datum; user:" + this.m.getLoggedInPouzivatel().getLogin());
            return;
        }
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd.MM.yyyy");
        if (cp.equals(pnlFrom)) {
            this.dtmOd = value;
            lblFrom.setText(value.format(dtf));
            ((CalendarPanel)pnlTo).setMinDate(value);
            ((CalendarPanel)pnlTo).updateUI();
            this.dtmDo = ((CalendarPanel)pnlTo).getSelectedValue();
            lblTo.setText(this.dtmDo == null ? "" : this.dtmDo.format(dtf));
        } else if (cp.equals(pnlTo)) {
            this.dtmDo = value;
            lblTo.setText(value.format(dtf));
        }
    }
}
