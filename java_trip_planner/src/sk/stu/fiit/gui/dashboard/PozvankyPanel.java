/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.stu.fiit.gui.dashboard;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.util.logging.Level;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import sk.stu.fiit.app.CustomLogger;
import sk.stu.fiit.app.trip.Pozvanka;
import sk.stu.fiit.app.trip.Pozvanka.StatusPozvanky;
import sk.stu.fiit.app.user.Vyletnik;
import sk.stu.fiit.gui.MainWindow;
import sk.stu.fiit.gui.utils.CustomDialog;
import sk.stu.fiit.gui.utils.CustomScrollBarUI;
import sk.stu.fiit.gui.utils.CellRenderers.PozvankyCellRenderer;
import sk.stu.fiit.gui.utils.RoundedImage;
import sk.stu.fiit.gui.utils.RoundedPanel;

/**
 *
 * @author dlhyl
 */
public class PozvankyPanel extends javax.swing.JPanel {
    private final MainWindow main;
    /**
     * Creates new form RebricekPanel
     */
    public PozvankyPanel(MainWindow m) {
        this.main = m;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlTitle = new RoundedPanel(20, new Color(101, 21, 40, 180));
        lblTitle = new javax.swing.JLabel();
        pnlContent = new RoundedPanel(50, new Color(144,30,57,180));
        lblBack = new javax.swing.JLabel();
        pnlInvitation = new javax.swing.JPanel();
        lblOdT = new javax.swing.JLabel();
        lblTripT = new javax.swing.JLabel();
        lblDescT = new javax.swing.JLabel();
        btnAccept = new javax.swing.JButton();
        btnDecline = new javax.swing.JButton();
        scrollDEsc = new javax.swing.JScrollPane();
        textDesc = new javax.swing.JTextArea();
        lblFrom = new javax.swing.JLabel();
        lblTrip = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        pnlList = new RoundedPanel(50, new Color(0,0,0,100));
        scrollList = new javax.swing.JScrollPane();
        DefaultListModel dlm = new DefaultListModel();
        for (Pozvanka p : ((Vyletnik)this.main.getLoggedInPouzivatel()).getPozvanky())
        dlm.add((p.isPotvrdena() || p.isZamietnuta()) && dlm.size() > 0 ? dlm.size()-1:0,p);
        listInvitations = new javax.swing.JList<>(dlm);

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        pnlTitle.setMaximumSize(new java.awt.Dimension(0, 0));
        pnlTitle.setMinimumSize(new java.awt.Dimension(0, 0));
        pnlTitle.setOpaque(false);
        pnlTitle.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlTitle.setLayout(new java.awt.GridBagLayout());

        lblTitle.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 204, 204));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle"); // NOI18N
        lblTitle.setText(bundle.getString("POZVÁNKY")); // NOI18N
        lblTitle.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        pnlTitle.add(lblTitle, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 300;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(80, 100, -1, 100);
        add(pnlTitle, gridBagConstraints);

        pnlContent.setOpaque(false);
        pnlContent.setLayout(new java.awt.GridBagLayout());

        lblBack.setBackground(new java.awt.Color(255, 255, 255));
        lblBack.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblBack.setForeground(new java.awt.Color(200, 200, 200));
        lblBack.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/stu/fiit/assets/icons/previous.png"))); // NOI18N
        lblBack.setText(bundle.getString("SPÄŤ")); // NOI18N
        lblBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblBackMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 25);
        pnlContent.add(lblBack, gridBagConstraints);

        pnlInvitation.setMinimumSize(new java.awt.Dimension(0, 0));
        pnlInvitation.setOpaque(false);
        pnlInvitation.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlInvitation.setLayout(new java.awt.GridBagLayout());

        lblOdT.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblOdT.setForeground(new java.awt.Color(255, 102, 102));
        lblOdT.setText(bundle.getString("OD")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
        pnlInvitation.add(lblOdT, gridBagConstraints);

        lblTripT.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblTripT.setForeground(new java.awt.Color(255, 102, 102));
        lblTripT.setText(bundle.getString("VÝLET")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        pnlInvitation.add(lblTripT, gridBagConstraints);

        lblDescT.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblDescT.setForeground(new java.awt.Color(255, 102, 102));
        lblDescT.setText(bundle.getString("POPIS")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 5, 0);
        pnlInvitation.add(lblDescT, gridBagConstraints);

        btnAccept.setBackground(new java.awt.Color(144, 30, 57));
        btnAccept.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        btnAccept.setForeground(new java.awt.Color(255, 204, 204));
        btnAccept.setText(bundle.getString("POTVRDIŤ")); // NOI18N
        btnAccept.setMaximumSize(new java.awt.Dimension(112, 35));
        btnAccept.setMinimumSize(new java.awt.Dimension(112, 35));
        btnAccept.setPreferredSize(new java.awt.Dimension(125, 40));
        btnAccept.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnAcceptMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 5, 150);
        pnlInvitation.add(btnAccept, gridBagConstraints);

        btnDecline.setBackground(new java.awt.Color(144, 30, 57));
        btnDecline.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        btnDecline.setForeground(new java.awt.Color(255, 204, 204));
        btnDecline.setText(bundle.getString("ZAMIETNUŤ")); // NOI18N
        btnDecline.setPreferredSize(new java.awt.Dimension(125, 40));
        btnDecline.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnDeclineMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 0, 150);
        pnlInvitation.add(btnDecline, gridBagConstraints);

        scrollDEsc.setOpaque(false);
        scrollDEsc.getViewport().setOpaque(false);
        scrollDEsc.setViewportBorder(null);
        scrollDEsc.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        textDesc.setEditable(false);
        textDesc.setBackground(new Color(0,0,0,40));
        textDesc.setColumns(1);
        textDesc.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        textDesc.setForeground(new java.awt.Color(255, 204, 204));
        textDesc.setLineWrap(true);
        textDesc.setRows(3);
        textDesc.setTabSize(0);
        textDesc.setWrapStyleWord(true);
        textDesc.setName(""); // NOI18N
        textDesc.setOpaque(false);
        scrollDEsc.setViewportView(textDesc);

        scrollDEsc.getVerticalScrollBar().setPreferredSize(new Dimension(5, 0));
        scrollDEsc.getVerticalScrollBar().setUI(new CustomScrollBarUI());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 4.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 5, 0);
        pnlInvitation.add(scrollDEsc, gridBagConstraints);

        lblFrom.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblFrom.setForeground(new java.awt.Color(255, 204, 204));
        lblFrom.setPreferredSize(new java.awt.Dimension(0, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
        pnlInvitation.add(lblFrom, gridBagConstraints);

        lblTrip.setFont(new java.awt.Font("Gill Sans MT", 1, 24)); // NOI18N
        lblTrip.setForeground(new java.awt.Color(255, 204, 204));
        lblTrip.setPreferredSize(new java.awt.Dimension(0, 32));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        pnlInvitation.add(lblTrip, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.4;
        pnlInvitation.add(filler2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.3;
        pnlContent.add(pnlInvitation, gridBagConstraints);

        pnlList.setMinimumSize(new java.awt.Dimension(0, 0));
        pnlList.setOpaque(false);
        pnlList.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlList.setLayout(new java.awt.GridBagLayout());

        scrollList.getViewport().setOpaque(false);
        scrollList.setViewportBorder(null);
        scrollList.getVerticalScrollBar().setPreferredSize(new Dimension(10, 0));
        scrollList.getVerticalScrollBar().setUI(new CustomScrollBarUI());
        scrollList.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        scrollList.setOpaque(false);

        listInvitations.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    Pozvanka p = listInvitations.getSelectedValue();
                    if (p != null && p.getPrijemca().equals((Vyletnik)main.getLoggedInPouzivatel()) && !p.isPotvrdena() && !p.isZamietnuta()) {
                        if (p.getOdosielatel().getObrazok() != null)
                        lblFrom.setIcon(RoundedImage.getImage(p.getOdosielatel().getObrazok(), 30));
                        else
                        lblFrom.setIcon(new ImageIcon(new ImageIcon(getClass().getResource("/sk/stu/fiit/assets/icons/profile-user-256.png")).getImage().getScaledInstance(30, 30, Image.SCALE_DEFAULT)));

                        lblFrom.setText(p.getOdosielatel().getCeleMeno());
                        lblTrip.setText(p.getVylet().getNazov()+", "+p.getVylet().getDatumString());
                        lblTrip.setIcon(new ImageIcon(p.getVylet().getTyp().getIconURL()));
                        textDesc.setText(p.getSprava());
                    }
                }
            }
        });
        listInvitations.setOpaque(false);
        listInvitations.setCellRenderer(new PozvankyCellRenderer(30, this.main.getLoggedInPouzivatel()));
        scrollList.setViewportView(listInvitations);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        pnlList.add(scrollList, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.7;
        gridBagConstraints.insets = new java.awt.Insets(10, 25, 25, 25);
        pnlContent.add(pnlList, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 100, 100);
        add(pnlContent, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void lblBackMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseReleased
        this.main.changeDashboardScreen("cardDashboardMenu");
    }//GEN-LAST:event_lblBackMouseReleased

    private void btnAcceptMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAcceptMouseReleased
//        potvrdit
        Pozvanka p = listInvitations.getSelectedValue();
        if (p == null || !p.getPrijemca().equals((Vyletnik)main.getLoggedInPouzivatel()) || p.isPotvrdena() || p.isZamietnuta()) {
            new CustomDialog(this.getParent(), java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("error_vyberte_pozvanku"), java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("CHYBA"), JOptionPane.WARNING_MESSAGE);
            CustomLogger.getLogger().log(Level.WARNING, "[PozvankyPanel] nevybrata pozvanka; user:" + this.main.getLoggedInPouzivatel().getLogin());
            return;
        }
        CustomLogger.getLogger().log(Level.INFO, "[Invitation confirmed] ["+p.getPrijemca().getLogin()+" - " +p.getVylet().getNazov()+ "]");
        p.setStatus(StatusPozvanky.POTVRDENA);
        p.getVylet().pridajClena(p.getPrijemca());
        resetForm();
        listInvitations.revalidate();
        listInvitations.repaint();
    }//GEN-LAST:event_btnAcceptMouseReleased

    private void btnDeclineMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeclineMouseReleased
//        zamietnut
        Pozvanka p = listInvitations.getSelectedValue();
        if (p == null || !p.getPrijemca().equals((Vyletnik)main.getLoggedInPouzivatel()) || p.isPotvrdena() || p.isZamietnuta()) {
            new CustomDialog(this.getParent(), java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("error_vyberte_pozvanku"), java.util.ResourceBundle.getBundle("sk/stu/fiit/gui/bundle").getString("CHYBA"), JOptionPane.WARNING_MESSAGE);
            CustomLogger.getLogger().log(Level.WARNING, "[PozvankyPanel] nevybrata pozvanka; user:" + this.main.getLoggedInPouzivatel().getLogin());
            return;
        }
        CustomLogger.getLogger().log(Level.INFO, "[Invitation declined] ["+p.getPrijemca().getLogin()+" - " +p.getVylet().getNazov()+ "]");
        p.setStatus(StatusPozvanky.ZAMIETNUTA);
        resetForm();
        listInvitations.revalidate();
        listInvitations.repaint();
    }//GEN-LAST:event_btnDeclineMouseReleased

    private void resetForm() {
        lblFrom.setIcon(null);
        lblFrom.setText("");
        lblTrip.setText("");
        lblTrip.setIcon(null);
        textDesc.setText("");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnDecline;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JLabel lblBack;
    private javax.swing.JLabel lblDescT;
    private javax.swing.JLabel lblFrom;
    private javax.swing.JLabel lblOdT;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTrip;
    private javax.swing.JLabel lblTripT;
    private javax.swing.JList<Pozvanka> listInvitations;
    private javax.swing.JPanel pnlContent;
    private javax.swing.JPanel pnlInvitation;
    private javax.swing.JPanel pnlList;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JScrollPane scrollDEsc;
    private javax.swing.JScrollPane scrollList;
    private javax.swing.JTextArea textDesc;
    // End of variables declaration//GEN-END:variables
}
