/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.stu.fiit.gui.utils.CellRenderers;

import java.awt.Color;
import java.awt.Component;
import java.time.format.DateTimeFormatter;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import sk.stu.fiit.app.trip.Itinerar.ItinerarItem;
import sk.stu.fiit.gui.utils.RoundedPanel;

/**
 *
 * @author dlhyl
 */
public class ItinerarCellRenderer extends javax.swing.JPanel implements ListCellRenderer<ItinerarItem>{

    /**
     * Creates new form ItinerarCellRenderer
     */
    public ItinerarCellRenderer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlContent = new RoundedPanel(25, new Color(101, 21, 40));
        lblPoi = new javax.swing.JLabel();
        lblDateTo = new javax.swing.JLabel();
        lblDateFrom = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(0, 50));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(0, 50));
        setLayout(new java.awt.GridBagLayout());

        pnlContent.setMinimumSize(new java.awt.Dimension(0, 50));
        pnlContent.setOpaque(false);
        pnlContent.setPreferredSize(new java.awt.Dimension(0, 50));
        pnlContent.setLayout(new java.awt.GridBagLayout());

        lblPoi.setFont(new java.awt.Font("Gill Sans MT", 0, 24)); // NOI18N
        lblPoi.setForeground(new java.awt.Color(255, 204, 204));
        lblPoi.setText("Bratislava");
        lblPoi.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        lblPoi.setMinimumSize(new java.awt.Dimension(0, 50));
        lblPoi.setPreferredSize(new java.awt.Dimension(0, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        pnlContent.add(lblPoi, gridBagConstraints);

        lblDateTo.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        lblDateTo.setForeground(new java.awt.Color(255, 204, 204));
        lblDateTo.setMaximumSize(null);
        lblDateTo.setMinimumSize(new java.awt.Dimension(80, 22));
        lblDateTo.setPreferredSize(new java.awt.Dimension(80, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(-1, 15, 0, 0);
        pnlContent.add(lblDateTo, gridBagConstraints);

        lblDateFrom.setFont(new java.awt.Font("Gill Sans MT", 0, 18)); // NOI18N
        lblDateFrom.setForeground(new java.awt.Color(255, 204, 204));
        lblDateFrom.setMaximumSize(null);
        lblDateFrom.setMinimumSize(new java.awt.Dimension(80, 22));
        lblDateFrom.setPreferredSize(new java.awt.Dimension(80, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, -1, 0);
        pnlContent.add(lblDateFrom, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        add(pnlContent, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

   


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblDateFrom;
    private javax.swing.JLabel lblDateTo;
    private javax.swing.JLabel lblPoi;
    private javax.swing.JPanel pnlContent;
    // End of variables declaration//GEN-END:variables

    @Override
    public Component getListCellRendererComponent(JList<? extends ItinerarItem> list, ItinerarItem value, int index, boolean isSelected, boolean cellHasFocus) {
        lblPoi.setText(value.getMiesto().getName());
        if (value.getDatum() != null) {
            lblDateFrom.setText(value.getDatum().format(DateTimeFormatter.ofPattern("dd.MM.yyyy")));
            lblDateTo.setText(value.getDatum().format(DateTimeFormatter.ofPattern("HH:mm")));
        } else {
            lblDateFrom.setText("");
            lblDateTo.setText("");
        }
        if (isSelected) {
            ((RoundedPanel)pnlContent).setBackgroundColor(new Color(144, 30, 57));
        } else {
            ((RoundedPanel)pnlContent).setBackgroundColor(new Color(101, 21, 40));
        }
        return this;
    }
}
